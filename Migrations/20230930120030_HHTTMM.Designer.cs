// <auto-generated />
using System;
using HTMbackend.HTM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HTMbackend.Migrations
{
    [DbContext(typeof(HtmContext))]
    [Migration("20230930120030_HHTTMM")]
    partial class HHTTMM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HTMbackend.HTM.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("organization", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Implement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("implement");

                    b.Property<bool>("NewRiskFromRcm")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("NewRiskFromRCM");

                    b.Property<string>("Rcmtext")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RCMtext");

                    b.Property<int>("Rcmtype")
                        .HasColumnType("int")
                        .HasColumnName("RCMtype");

                    b.Property<string>("VerOfEff")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Rcmtype" }, "RCMtype");

                    b.ToTable("rcm", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcm2risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("RcmId")
                        .HasColumnType("int")
                        .HasColumnName("rcmID");

                    b.Property<int?>("RiskId")
                        .HasColumnType("int")
                        .HasColumnName("riskID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RcmId" }, "rcmID");

                    b.HasIndex(new[] { "RiskId" }, "riskID");

                    b.ToTable("rcm2risk", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcmtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("rcmtype", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<byte[]>("Complete")
                        .HasMaxLength(1)
                        .HasColumnType("binary(1)")
                        .HasColumnName("complete")
                        .IsFixedLength();

                    b.Property<string>("DesignChar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("designChar");

                    b.Property<string>("Harm")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("harm");

                    b.Property<string>("Hazard")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hazard");

                    b.Property<string>("HazardSit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hazardSit");

                    b.Property<int>("LifeCycle")
                        .HasColumnType("int")
                        .HasColumnName("lifeCycle");

                    b.Property<int>("ProbPast")
                        .HasColumnType("int")
                        .HasColumnName("Prob_past");

                    b.Property<int>("ProbPre")
                        .HasColumnType("int")
                        .HasColumnName("Prob_pre");

                    b.Property<string>("RcmRational")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rcmRational");

                    b.Property<int>("RiskPast")
                        .HasColumnType("int")
                        .HasColumnName("risk_past");

                    b.Property<int>("RiskPre")
                        .HasColumnType("int")
                        .HasColumnName("risk_pre");

                    b.Property<string>("Scenario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("scenario");

                    b.Property<int>("SeverityPast")
                        .HasColumnType("int")
                        .HasColumnName("severity_past");

                    b.Property<int>("SeverityPre")
                        .HasColumnType("int")
                        .HasColumnName("severity_pre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("risk", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("OrganizationId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FirstName" }, "FirstName");

                    b.HasIndex(new[] { "LastName" }, "LastName");

                    b.HasIndex(new[] { "OrganizationId" }, "OrganizationId");

                    b.HasIndex(new[] { "Password" }, "Password");

                    b.HasIndex(new[] { "RoleId" }, "RoleId");

                    b.HasIndex(new[] { "Username" }, "Username");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcm", b =>
                {
                    b.HasOne("HTMbackend.HTM.Rcmtype", "RcmtypeNavigation")
                        .WithMany("Rcms")
                        .HasForeignKey("Rcmtype")
                        .IsRequired()
                        .HasConstraintName("rcm_ibfk_1");

                    b.Navigation("RcmtypeNavigation");
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcm2risk", b =>
                {
                    b.HasOne("HTMbackend.HTM.Rcm", "Rcm")
                        .WithMany("Rcm2risks")
                        .HasForeignKey("RcmId")
                        .HasConstraintName("rcm2risk_ibfk_1");

                    b.HasOne("HTMbackend.HTM.Risk", "Risk")
                        .WithMany("Rcm2risks")
                        .HasForeignKey("RiskId")
                        .HasConstraintName("rcm2risk_ibfk_2");

                    b.Navigation("Rcm");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("HTMbackend.HTM.User", b =>
                {
                    b.HasOne("HTMbackend.HTM.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_ibfk_1");

                    b.HasOne("HTMbackend.HTM.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_ibfk_2");

                    b.Navigation("Organization");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HTMbackend.HTM.Organization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcm", b =>
                {
                    b.Navigation("Rcm2risks");
                });

            modelBuilder.Entity("HTMbackend.HTM.Rcmtype", b =>
                {
                    b.Navigation("Rcms");
                });

            modelBuilder.Entity("HTMbackend.HTM.Risk", b =>
                {
                    b.Navigation("Rcm2risks");
                });

            modelBuilder.Entity("HTMbackend.HTM.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
